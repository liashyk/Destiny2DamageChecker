<div class="buff-manager">
	 <h1>DAMAGE BUFFS</h1>
	 @if(Buffs!=null){
		@foreach(Perk perk in Buffs.GetPerkList())
		{
			<div class="buff-container">
				<div class="buff_name" @onmousemove=@((e)=>OnPerkOver(e,perk)) @onmouseout=OnHidePerkSummary>
					<div class="buff_icon">
						<img src=@($"css/icons/perks/{perk.Name}.png")>
					</div>
					@(perk!=null? perk.Name.ToUpper() : "")
				</div>
				<div>
					STACK
					@if(perk.ActivationSteps.Count==1){
						<select name="@perk" @onchange=@((e)=>ChangeStack(perk,e.Value)) disabled>
							<option value="1" selected>1x</option>
						</select>
					}else{
						<select name="@perk" @onchange=@((e)=>ChangeStack(perk,e.Value))>
							<option value="1" selected>1x</option>
							@for(int j = 2;j<=perk.ActivationSteps.Count;j++){
								<option value="@j">@(j)x</option>
							}
						</select>
					}
				</div>
				<div>
					DAMAGE BUFF: <span class="buff-percent">@(Buffs.GetPerksBuff(perk).PveDamageBuffPercent+"%")</span>
				</div>
			</div>
		}
		<div class="combined-buff-result">COMBINED BUFF:@(Math.Round(combinedBuff.PveDamageBuffPercent,2)+" %")</div>
	 }

	<button class="add-buffs-button" @onclick="@ShowAddBuffs"> ADD BUFFS </button>
</div>

<div class="bottom-bar" style=@bottomBarStyle>
	<AddBuffs OnApplyCallback="@HideAddBuffs" @ref="addBuffs" OnHidePerkSummary="OnHidePerkSummary" OnShowPerkSummary="OnShowPerkSummary"></AddBuffs>
</div>

@code {
	[CascadingParameter(Name = "ArchetypeId")]
	public int ArchetypeId { get; set; }

	public string bindValue;

	private string bottomBarStyle = "";

	private void HideAddBuffs()
	{
		if (addBuffs != null)
		{
			addBuffs.Hide();
		}
		OnChangeBuffs.InvokeAsync();
	}

	//Invokes while add,remove buffs or change stack of buffs
	[Parameter]
	public EventCallback OnChangeBuffs { get; set; }

	private void ChangeStack(IStackable buff, Object value)
	{
		int stackValue = int.Parse(value.ToString());
		Buffs.BuffStacks[buff] = stackValue;
		OnChangeBuffs.InvokeAsync();
	}


	public CombinedBuff combinedBuff 
	{ 
		get
		{
			return Buffs.GetCombinedBuff();
		}
	}

	private void ShowAddBuffs()
	{
		Console.WriteLine("perks in BUFFS MANAGER:");
		foreach(Perk perk in Buffs.GetPerkList()){
			Console.WriteLine(perk.Id);
		}
		if (addBuffs != null)
		{
			addBuffs.Show();
		}
	}

	private void OnPerkOver(MouseEventArgs e,Perk perk)
	{
		var args=new ShowPerkSummaryArgs()
        {
            PageX=e.PageX,
            PageY=e.PageY,
            Perk=perk
        };
		OnShowPerkSummary.InvokeAsync(args);
	}

	[Parameter]
	public EventCallback OnHidePerkSummary { get; set; }

	[Parameter]
    public EventCallback<ShowPerkSummaryArgs> OnShowPerkSummary { get; set; }
}

