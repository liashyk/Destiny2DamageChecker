
<div class="damage-menu">
	<div class="mode-switcher">
		<button class=@(!IsPvp? "selected-button" : "not-selected-button") @onclick="@OpenPve">PVE</button>
		<button class=@(IsPvp? "selected-button" : "not-selected-button") @onclick="@OpenPvp">PVP</button>
	</div>
	@if (CurrentArchetype!=null){
		<DisplayDamage Damage="@CurrentArchetype.ShotDamage" IsPve=@(!IsPvp) @ref=@displayDamage></DisplayDamage>
		<div class="pvp-damage-parametres" style=@(IsPvp? "":"display:none;")>
			<div class="damage-parameter-setting">
				<div class="parameter-header">GUARDIAN RESILIANCE</div>
				<select>
					<option selected>@(1 + "x")</option>
					@for (int i = 2; i <= 10; i++)
					{
						<option>@(i + "x")</option>
					}
				</select>
			</div>
			<div class="damage-parameter">
				<div class="parameter-header">OPTIMAL TTK</div>
				<div class="parameter-value">0.48</div>
			</div>
			<div class="damage-parameter">
				<div class="parameter-header">BULLET TO SHOOT</div>
				<div class="parameter-value">3</div>
			</div>
			<div class="damage-parameter">
				<div class="parameter-header">DPS</div>
				<div class="parameter-value">243</div>
			</div>
			<div class="damage-parameter">
				<div class="parameter-header">BODY TTK</div>
				<div class="parameter-value">1.24</div>
			</div>
		</div>
		<div class="pve-damage-parametres" style=@(!IsPvp? "":"display:none;")>
			<div class="damage-parameter-setting">
				<div class="parameter-header">RELOAD SPEED VALUE</div>
				<div class="parameter-setting-value">
					@(GetReloadTime()+" s.")
					</div>
				<input type="number" min="0" @bind="@ReloadValue"/>
			</div>
			<div class="damage-parameter-setting">
				<div class="parameter-header">MAG SIZE</div>
				<input type="number" min="0" step="1" @bind=@MagSize/>
			</div>
			<div class="damage-parameter-setting">
				<div class="parameter-header">TAKING DAMAGE TIME </div>
				<input type="number" step="0.1" min="0" id="taking-damage-time-input" @bind=@TakingDamageTime/>
			</div>
			<div class="damage-parameter">
				<div class="parameter-header">SIMPLE DPS</div>
				<div class="parameter-value">@Math.Round(DamageService.GetSimplePveDps(CurrentArchetype,CurrentCombinedBuff),2)</div>
			</div>
			<div class="damage-parameter">
				<div class="parameter-header">RELOAD DPS</div>
				<div class="parameter-value">@GetReloadDps()</div>
			</div>
		</div>
	}
</div>



@code {
	[Parameter]
	public bool IsPvp { get; set; } = false;

	[Parameter]
	public Archetype? CurrentArchetype { get; set; } = null;

	[CascadingParameter]
	public CombinedBuff CurrentCombinedBuff { get; set; } = new CombinedBuff();

	DisplayDamage? displayDamage;

	private int _reloadValue=100;

	public int ReloadValue 
	{
		get
		{
			return _reloadValue;
		}
		set
		{
			if(value>=0 && value<=100){
				_reloadValue = value;
			}
		}
	}

	private double _takingDamageTime = 60;

	public double TakingDamageTime 
	{  
		get
		{
			return _takingDamageTime;
		}
		set
		{
			if(value>0)
				_takingDamageTime = value;
		}
	}

	private int _magSize = 10;

	public int MagSize
	{
		get
		{
			return _magSize;
		}
		set
		{
			if (value >= 1)
			{
				_magSize = value;
			}
		}
	}

	private double GetReloadTime()
	{
		double reloadTime = -1;
		if (CurrentArchetype != null && CurrentArchetype.WeaponType!=null)
		{
			reloadTime = DamageService.GetReloadTime(CurrentArchetype.WeaponType.ReloadStats, ReloadValue);
		}
		return reloadTime;
	}

	private double GetReloadDps()
	{
		if (CurrentArchetype != null && CurrentArchetype.WeaponType != null)
		{
			return Math.Round(DamageService.GetReloadPveDps(CurrentArchetype, CurrentCombinedBuff,
				GetReloadTime(), TakingDamageTime, MagSize), 2);
		}return -1;

	}

	private void SwitchMode(){
		IsPvp = !IsPvp;
	}

	private void OpenPvp(){
		IsPvp = true;
	}

	private void OpenPve()
	{
		IsPvp = false;
	}
}
